//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Sources.Components.TileObjectComponent tileObject { get { return (Sources.Components.TileObjectComponent)GetComponent(GameComponentsLookup.TileObject); } }
    public bool hasTileObject { get { return HasComponent(GameComponentsLookup.TileObject); } }

    public void AddTileObject(Sources.TileObjectType newType) {
        var index = GameComponentsLookup.TileObject;
        var component = (Sources.Components.TileObjectComponent)CreateComponent(index, typeof(Sources.Components.TileObjectComponent));
        component.Type = newType;
        AddComponent(index, component);
    }

    public void ReplaceTileObject(Sources.TileObjectType newType) {
        var index = GameComponentsLookup.TileObject;
        var component = (Sources.Components.TileObjectComponent)CreateComponent(index, typeof(Sources.Components.TileObjectComponent));
        component.Type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveTileObject() {
        RemoveComponent(GameComponentsLookup.TileObject);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTileObject;

    public static Entitas.IMatcher<GameEntity> TileObject {
        get {
            if (_matcherTileObject == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TileObject);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTileObject = matcher;
            }

            return _matcherTileObject;
        }
    }
}
